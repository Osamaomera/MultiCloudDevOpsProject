@Library('shared_library')_
pipeline {
    agent any
    tools {
        jdk 'jdk-17'
        maven 'maven'
    }
    environment {
        SCANNER_HOME= tool 'sonar-scanner'
        dockerHubCredentialsID	    = 'DockerHub'  		    			         // DockerHub credentials ID.
	    imageName                   = 'osayman74/spot'                           // DockerHub repo/image_name.
        k8sCredentialsID	        = 'k8s'	    				                     // KubeConfig credentials ID.
    }

    stages {
            stage('Repo Checkout') {
            steps {
            	script {
                	checkoutRepo
                }
            }
        }

        stage('Run Unit Test') {
            steps {
                script {
                	// Navigate to the directory contains the Application
                	dir('App') {
                		runUnitTests
            		}
        	}
    	    }
	    }
	
        stage('Run SonarQube Analysis') {
            steps {
                script {
                    	// Navigate to the directory contains the Application
                    	dir('App') {
                    		runSonarQubeAnalysis()
                    	}
                }
            }
        }

         stage('Build and Push Docker Image') {
            steps {
                script {
                	// Navigate to the directory contains Dockerfile
                 	dir('app') {
                 		buildandPushDockerImage("${dockerHubCredentialsID}", "${imageName}")
                        
                    	}
                }
            }
        }

        stage('Deploy on OpenShift Cluster') {
            steps {
                script { 
                        // Navigate to the directory contains OpenShift YAML files
                	dir('k8s') {
				deployOnOpenShift("${openshiftCredentialsID}", "${openshiftCluster}", "${openshifProject}", "${imageName}")
                    	}
                }
            }
        }
    }

        post {
        success {
            echo "${JOB_NAME}-${BUILD_NUMBER} pipeline succeeded"
        }
        failure {
            echo "${JOB_NAME}-${BUILD_NUMBER} pipeline failed"
        }
    }
}